<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderPayment">
    <insert id="insertCustomerOrder" parameterType="CompleteOrder">
        <![CDATA[
        DECLARE
            v_order_num NUMBER;

        BEGIN
            -- customer_orders 테이블에 삽입
            INSERT INTO customer_orders (
                order_num,
                order_addr,
                order_addr_detail,
                common_ent_pw,
                recipient_name,
                recipient_phoneno,
                member_id,
                paymentId
            ) VALUES (
                customer_orders_seq.nextval,
                #{orderAddr},
                #{orderAddrDetail},
                #{commonEntPw},
                #{recipientName},
                #{recipientPhoneno},
                #{memberId},
                #{paymentId}
            )
            RETURNING order_num INTO v_order_num;

            -- orderDetail 리스트의 각 항목에 대해 customer_order_details 테이블에 삽입
            <foreach collection="orderDetail" item="detail" separator=";">
                INSERT INTO customer_order_details (
                    order_detail_num,
                    order_detail_qty,
                    book_isbn,
                    order_detail_price,
                    order_num
                ) VALUES (
                    customer_orders_detail_seq.nextval,
                    #{detail.order_detail_qty},
                    #{detail.book_isbn},
                    #{detail.order_detail_price},
                    v_order_num
                )
            </foreach;

        END;
        ]]>
    </insert>

    <select id="getOrderDetail" resultType="userOrders" parameterType="java.util.HashMap">
        SELECT
        COUNT(co.order_num) AS order_cnt,
        co.order_num,
        co.member_id,
        co.order_addr,
        co.order_addr_detail,
        co.recipient_name,
        co.recipient_phoneNo,
        m.member_name,
        m.member_phoneno,
        NVL(SUM(cod.order_detail_price * cod.order_detail_qty), 0) AS order_price_total
        FROM
        customer_orders        co
        LEFT JOIN members                m ON co.member_id = m.member_id
        LEFT JOIN customer_order_details cod ON co.order_num = cod.order_num
        WHERE
        co.order_num = #{order_num} AND m.member_id = #{member_id}
        GROUP BY
        co.order_num,
        co.member_id,
        co.order_addr,
        co.order_addr_detail,
        co.recipient_name,
        co.recipient_phoneNo,
        m.member_name,
        m.member_phoneno
    </select>

    <select id="OrderDetail" resultType="UserOrderDetails" parameterType="int">
        SELECT
        b.book_thumbnail_changed,
        b.book_name,
        cod.order_detail_price,
        cod.order_detail_qty
        FROM
        customer_order_details cod
        LEFT JOIN books                  b ON cod.book_isbn = b.book_isbn
        WHERE
        cod.order_num = #{order_num}
    </select>
</mapper>
