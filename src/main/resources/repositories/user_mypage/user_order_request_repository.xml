<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserOrderRequest">

	<select id="orderList" resultType="customerOrderWithDetails">
		SELECT
			co.order_purchase_date,
			co.order_num,
			b.book_thumbnail_changed,
			b.book_name,
			SUM(cod.order_detail_qty) AS order_qty_total,
			SUM(cod.order_detail_price * cod.order_detail_qty) AS order_price_total,
			CASE
			WHEN 
				co.order_delivery_status = '01' THEN '배송전'
		    WHEN 
		    	co.order_delivery_status = '02' THEN '배송중'
		    WHEN 
		    	co.order_delivery_status = '03' THEN '배송완료'
		    END 
		    	AS order_delivery_status,
			CASE
			    WHEN cod.order_detail_status = '01' THEN '주문완료'
			    WHEN cod.order_detail_status = '02' THEN '취소요청'
			    WHEN cod.order_detail_status = '04' THEN '반품요청'
			    WHEN cod.order_detail_status = '05' THEN '취소완료'
			    WHEN cod.order_detail_status = '06' THEN '교환완료'
			    WHEN cod.order_detail_status = '07' THEN '반품완료'
		    END 
		    	AS order_detail_status
		FROM
			customer_orders co
			LEFT JOIN customer_order_details cod ON co.order_num = cod.order_num
	    	LEFT JOIN books b ON cod.book_isbn = b.book_isbn
	    WHERE
	    	co.member_id = #{member_id}
	    GROUP BY
        	co.order_num,
	        co.order_purchase_date,
	        b.book_thumbnail_changed,
	        b.book_name,
	        cod.order_detail_status,
	        co.order_delivery_status
	</select>
	
	<select id="countByOrderStatus" parameterType="Map" resultType="Integer">
	    SELECT 
	    	COUNT(*)
	    FROM 
	    	customer_orders co
	    JOIN
	    	customer_order_details od ON co.order_num = od.order_num
	    WHERE 
	    	member_id = #{memberId} AND order_detail_status = #{status}
	</select>
	
	<select id="countByDeliveryStatus" parameterType="Map" resultType="Integer">
	    SELECT 
	    	COUNT(*)
	    FROM 
	    	customer_orders
	    WHERE 
	    	member_id = #{memberId} AND order_delivery_status = #{status}
	</select>
	
	<select id="getOrderDetail" parameterType="Integer" resultType="customerOrderWithDetails">
   		SELECT	
   			co.order_num,
            co.order_purchase_date,
            b.book_thumbnail_changed,
            b.book_name,
            cod.order_detail_price,
            cod.order_detail_qty,
            COALESCE(co.recipient_name, m.member_name) AS recipient_name,
            COALESCE(co.recipient_phoneno, m.member_phoneno) AS recipient_phoneno,
            co.order_addr,
            co.order_addr_detail,
            CASE
                WHEN cod.order_detail_status = '01' THEN '주문완료'
                WHEN cod.order_detail_status = '02' THEN '취소요청'
                WHEN cod.order_detail_status = '04' THEN '반품요청'
                WHEN cod.order_detail_status = '05' THEN '취소완료'
                WHEN cod.order_detail_status = '06' THEN '교환완료'
                WHEN cod.order_detail_status = '07' THEN '반품완료'
            END AS order_detail_status,
            CASE
                WHEN co.order_delivery_status = '01' THEN '배송전'
                WHEN co.order_delivery_status = '02' THEN '배송중'
                WHEN co.order_delivery_status = '03' THEN '배송완료'
            END AS order_delivery_status,
            SUM(cod.order_detail_price * cod.order_detail_qty) AS order_price_total
        FROM 
            customer_orders co
            LEFT JOIN customer_order_details cod ON co.order_num = cod.order_num
            LEFT JOIN books b ON cod.book_isbn = b.book_isbn
            LEFT JOIN members m ON co.member_id = m.member_id 
        WHERE
            co.order_num = #{orderNum}
        GROUP BY 
            co.order_num, 
            co.order_purchase_date, 
            b.book_thumbnail_changed, 
            b.book_name, 
            cod.order_detail_price, 
            cod.order_detail_qty, 
            co.order_addr, 
            co.order_addr_detail, 
            cod.order_detail_status,
            co.order_delivery_status,
            COALESCE(co.recipient_name, m.member_name),
            COALESCE(co.recipient_phoneno, m.member_phoneno)
	</select>

	<select id="cancleList" parameterType="java.util.HashMap" resultType="customerOrderWithDetails">
		SELECT
	    co.order_num,
	    co.order_purchase_date,
	    b.book_thumbnail_changed,
	    b.book_name,
	    cod.order_detail_num,
	    cod.order_detail_qty,
	    cod.order_detail_price,
   	    cod.order_request_qty,
    	cod.order_complete_qty,
    	cod.book_isbn,
	    CASE
	    	WHEN cod.order_detail_status = '01' THEN '주문완료'
	    	WHEN cod.order_detail_status = '02' THEN '취소요청'
	    	WHEN cod.order_detail_status = '03' THEN '교환요청'
	    	WHEN cod.order_detail_status = '04' THEN '반품요청'
	    	WHEN cod.order_detail_status = '05' THEN '취소완료'
	    	WHEN cod.order_detail_status = '06' THEN '교환완료'
	    	WHEN cod.order_detail_status = '07' THEN '반품완료'
	    	WHEN cod.order_detail_status = '08' THEN '처리불가'
	    END AS order_detail_status
	FROM
	    customer_orders co
	    LEFT JOIN customer_order_details cod ON co.order_num = cod.order_num
	    LEFT JOIN books                  b ON cod.book_isbn = b.book_isbn
	WHERE
	    co.order_num = #{orderNum} AND co.member_id = #{memberId} AND cod.order_detail_status in ('02', '05')
	</select>
	
	<select id="returnList" parameterType="java.util.HashMap" resultType="customerOrderWithDetails">
		SELECT
	    co.order_num,
	    co.order_purchase_date,
	    b.book_thumbnail_changed,
	    b.book_name,
	    cod.order_detail_num,
	    cod.order_detail_qty,
	    cod.order_detail_price,
   	    cod.order_request_qty,
    	cod.order_complete_qty,
    	cod.book_isbn,
	    CASE
	    	WHEN cod.order_detail_status = '01' THEN '주문완료'
	    	WHEN cod.order_detail_status = '02' THEN '취소요청'
	    	WHEN cod.order_detail_status = '03' THEN '교환요청'
	    	WHEN cod.order_detail_status = '04' THEN '반품요청'
	    	WHEN cod.order_detail_status = '05' THEN '취소완료'
	    	WHEN cod.order_detail_status = '06' THEN '교환완료'
	    	WHEN cod.order_detail_status = '07' THEN '반품완료'
	    	WHEN cod.order_detail_status = '08' THEN '처리불가'
	    END AS order_detail_status
	FROM
	    customer_orders co
	    LEFT JOIN customer_order_details cod ON co.order_num = cod.order_num
	    LEFT JOIN books                  b ON cod.book_isbn = b.book_isbn
	WHERE
	    co.order_num = #{orderNum} AND co.member_id = #{memberId} AND cod.order_detail_status in ('04', '07')
	</select>
	
	<select id="orderRequestList" parameterType="java.util.HashMap" resultType="customerOrderWithDetails">
		SELECT
	    co.order_num,
	    co.order_purchase_date,
	    b.book_thumbnail_changed,
	    b.book_name,
	    cod.order_detail_num,
	    cod.order_detail_qty,
	    cod.order_detail_price,
   	    cod.order_request_qty,
    	cod.order_complete_qty,
    	cod.book_isbn,
	    CASE
	    	WHEN cod.order_detail_status = '01' THEN '주문완료'
	    	WHEN cod.order_detail_status = '02' THEN '취소요청'
	    	WHEN cod.order_detail_status = '03' THEN '교환요청'
	    	WHEN cod.order_detail_status = '04' THEN '반품요청'
	    	WHEN cod.order_detail_status = '05' THEN '취소완료'
	    	WHEN cod.order_detail_status = '06' THEN '교환완료'
	    	WHEN cod.order_detail_status = '07' THEN '반품완료'
	    	WHEN cod.order_detail_status = '08' THEN '처리불가'
	    END AS order_detail_status
	FROM
	    customer_orders co
	    LEFT JOIN customer_order_details cod ON co.order_num = cod.order_num
	    LEFT JOIN books                  b ON cod.book_isbn = b.book_isbn
	WHERE
	    co.order_num = #{orderNum} AND co.member_id = #{memberId} AND cod.order_detail_status = '01'
	</select>
	
	<update id="orderDateModify" parameterType="Integer">
		UPDATE customer_orders
		SET
		    order_modify_date = current_timestamp
		WHERE
		    order_num = #{orderNum}
	</update>
	
	<update id="orderCancle" parameterType="customerOrderWithDetails">
		UPDATE customer_order_details
		SET
		    order_detail_status = '02',
		    order_request_qty = #{order_detail_qty}
		WHERE
		    order_detail_num = #{order_detail_num} AND order_detail_status = '01'
	</update>
	
	<select id="getRefundInfo" parameterType="Integer" resultType="customerOrderWithDetails">
		SELECT 
		    SUM(CASE WHEN cod.order_detail_status = '05' THEN cod.order_detail_price * cod.order_complete_qty ELSE 0 END) AS refundAmount,
		    SUM(CASE WHEN cod.order_detail_status = '05' or cod.order_detail_status = '02' THEN cod.order_detail_price * cod.order_request_qty ELSE 0 END) AS cancellationAmount,
		    SUM(cod.order_detail_price * cod.order_detail_qty) AS order_price_total,
		    co.recipient_name,
		    co.recipient_phoneNo,
		    co.order_addr,
		    co.order_addr_detail,
		    co.retrieve_name,
		    co.retrieve_addr,
		    co.retrieve_addr_detail,
		    co.retrieve_phoneNo,
		    co.common_ent_pw,
		    co.retrieve_common_cnt_pw
		FROM customer_orders co
			LEFT JOIN customer_order_details cod ON co.order_num = cod.order_num
		WHERE co.order_num = #{order_num}
		GROUP BY
		    co.recipient_name,
		    co.recipient_phoneNo,
		    co.order_addr,
		    co.order_addr_detail,
		    co.retrieve_name,
		    co.retrieve_addr,
		    co.retrieve_addr_detail,
		    co.retrieve_phoneNo,
		    co.common_ent_pw,
		    co.retrieve_common_cnt_pw
	</select>
	
	<select id="getReturnRefundInfo" parameterType="Integer" resultType="customerOrderWithDetails">
		SELECT 
		    SUM(CASE WHEN cod.order_detail_status = '07' THEN cod.order_detail_price * cod.order_complete_qty ELSE 0 END) AS refundAmount,
		    SUM(cod.order_detail_price * cod.order_detail_qty) AS cancellationAmount,
		    SUM(cod.order_detail_price * cod.order_detail_qty) AS order_price_total,
		    co.recipient_name,
		    co.recipient_phoneNo,
		    co.order_addr,
		    co.order_addr_detail,
		    co.retrieve_name,
		    co.retrieve_addr,
		    co.retrieve_addr_detail,
		    co.retrieve_phoneNo,
		    co.common_ent_pw,
		    co.retrieve_common_cnt_pw
		FROM customer_orders co
			LEFT JOIN customer_order_details cod ON co.order_num = cod.order_num
		WHERE co.order_num = #{order_num}
		GROUP BY
		    co.recipient_name,
		    co.recipient_phoneNo,
		    co.order_addr,
		    co.order_addr_detail,
		    co.retrieve_name,
		    co.retrieve_addr,
		    co.retrieve_addr_detail,
		    co.retrieve_phoneNo,
		    co.common_ent_pw,
		    co.retrieve_common_cnt_pw
	</select>
	
	<update id="returnRequest" parameterType="java.util.Map">
		UPDATE customer_order_details
		SET
		    order_request_qty = order_request_qty + #{order_request_qty},
		    order_detail_status = '04'
		WHERE
		    order_detail_num = #{order_detail_num}
	</update>
	
	<update id="returnRequestInfoUpdate" parameterType="java.util.Map">
		UPDATE customer_orders
		SET
		    retrieve_addr = #{retrieve_addr},
		    retrieve_addr_detail = #{retrieve_addr_detail},
		    retrieve_name = #{retrieve_name},
		    retrieve_phoneno = #{retrieve_phoneNo},
		    retrieve_common_cnt_pw = #{common_ent_pw},
		    order_modify_date = current_timestamp
		WHERE
		    order_num = #{order_num}
	</update>
	
</mapper>